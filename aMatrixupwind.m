function [A,Abd] = aMatrixupwind(xn,method)


    if strcmp(method,'upwind')
        %create upwind matrix
        A = @(ve,vw,ind,dn,l) sparse([ind ind],[ind ind-dn],[1-l*ve l*vw],xn,xn);
        
        Abd = sparse([1 xn],[1 xn],[1 1],xn,xn);
    elseif strcmp(method,'laxfried')
        %create lax-friedrich method
        A = @(ve,vw,ind,dn,l) sparse([ind ind],[ind-dn ind+dn],...
            [1+l*vw 1-l*ve]/2,xn,xn);
        
        Abd = sparse([1 xn],[1 xn],[1 1],xn,xn);
    elseif strcmp(method,'laxwend')
        %create lax-wendroff method
        A = @(ve,vw,vp,ind,dn,l) sparse([ind ind ind],[ind-dn ind ind+dn],...
            [.5*(l*vw+l^2*vp.*vw) 1-(l^2)/2*(vp.*ve + vp.^2) ...
            0.5*(-l*ve+l^2*ve.^2)],xn,xn);
        
        Abd = sparse([1 xn],[1 xn],[1 1],xn,xn);
    elseif strcmp(method,'beamwarm')
        %create beam warming method
        A = @(ve,vw,vp,ind,dn,l) sparse([ind ind ind],[ind-2*dn ind-dn ind],...
            [-l/2*vw+.5*l^2*vw.*vp 2*l*vp-1/2*l^2*vp.*ve-1/2*l^2*vp.^2 ...
            1-3/2*l*ve+1/2*l^2*ve.^2],xn,xn);
        
        Abd = @(ve,vp,ind,dn,l) sparse([ind ind 1 xn],[ind-dn ind 1 xn],...
            [2*l*vp-1/2*l^2*vp.*ve-1/2*l^2*vp.^2 1-3/2*l*ve+1/2*l^2*ve.^2 1 1],xn,xn);
        
        
    elseif strcmp(method,'upwindsens')
        %create upwind matrix
        A = @(ve,vw,vs1e,vs1w,vs2e,vs2w,ind,dn,l) ...
              sparse([ind ind],[ind ind-dn],[1-l*ve l*vw],3*xn,3*xn) ...
            + sparse([ind+xn ind+xn],[ind ind-dn],[1-l*vs1e l*vs1w],3*xn,3*xn) ...
            + sparse([ind+2*xn ind+2*xn],[ind ind-dn],[1-l*vs2e l*vs2w],3*xn,3*xn) ...
            + sparse([ind+xn ind+xn],[ind+xn ind+xn-dn],[1-l*ve l*vw],3*xn,3*xn) ...
            + sparse([ind+2*xn ind+2*xn],[ind+2*xn ind+2*xn-dn],[1-l*ve l*vw],3*xn,3*xn);
        
        Abd = sparse([1 xn],[1 xn],[1 1],3*xn,3*xn) ...
            + sparse([1+xn 2*xn],[1+xn 2*xn],[1 1],3*xn,3*xn) ...
            + sparse([1+2*xn 3*xn],[1+2*xn 3*xn],[1 1],3*xn,3*xn);
        
    elseif strcmp(method,'laxfriedsens')
        %create lax-friedrich method
        A = @(ve,vw,vs1e,vs1w,vs2e,vs2w,ind,dn,l) ...
              sparse([ind ind],[ind-dn ind+dn],[1+l*vw 1-l*ve]/2,3*xn,3*xn)...
            + sparse([ind+xn ind+xn],[ind-dn ind+dn],[1+l*vs1w 1-l*vs1e]/2,3*xn,3*xn)...
            + sparse([ind+2*xn ind+2*xn],[ind-dn ind+dn],[1+l*vs2w 1-l*vs2e]/2,3*xn,3*xn)...
            + sparse([ind+xn ind+xn],[ind+xn-dn ind+xn+dn],[1+l*vw 1-l*ve]/2,3*xn,3*xn)...
            + sparse([ind+2*xn ind+2*xn],[ind+2*xn-dn ind+2*xn+dn],[1+l*vw 1-l*ve]/2,3*xn,3*xn);
        
        Abd = sparse([1 xn],[1 xn],[1 1],3*xn,3*xn) ...
            + sparse([1+xn 2*xn],[1+xn 2*xn],[1 1],3*xn,3*xn) ...
            + sparse([1+2*xn 3*xn],[1+2*xn 3*xn],[1 1],3*xn,3*xn);
    elseif strcmp(method,'laxwendsens')
        %create lax-wendroff method
        A = @(ve,vw,vp,vs1e,vs1w,vs1p,vs2e,vs2w,vs2p,ind,dn,l) ... 
              sparse(repmat(ind,1,3),[ind-dn ind ind+dn],[.5*(l*vw+l^2*vp.*vw) 1-(l^2)/2*(vp.*ve + vp.^2) ...
              0.5*(-l*ve+l^2*ve.^2)],3*xn,3*xn)...
            + sparse(repmat(ind+xn,1,3),[ind-dn ind ind+dn],[.5*(l*vs1w+l^2*vs1p.*vs1w) 1-(l^2)/2*(vs1p.*vs1e + vs1p.^2) ...
              0.5*(-l*vs1e+l^2*vs1e.^2)],3*xn,3*xn)...
            + sparse(repmat(ind+2*xn,1,3),[ind-dn ind ind+dn],[.5*(l*vs2w+l^2*vs2p.*vs2w) 1-(l^2)/2*(vs2p.*vs2e + vs2p.^2) ...
              0.5*(-l*vs2e+l^2*vs2e.^2)],3*xn,3*xn)...
            + sparse([ind+xn ind+xn ind+xn],[ind+xn-dn ind+xn ind+xn+dn],[.5*(l*vw+l^2*vp.*vw) 1-(l^2)/2*(vp.*ve + vp.^2) ...
              0.5*(-l*ve+l^2*ve.^2)],3*xn,3*xn)...
            + sparse([ind+2*xn ind+2*xn ind+2*xn],[ind+2*xn-dn ind+2*xn ind+2*xn+dn],[.5*(l*vw+l^2*vp.*vw) 1-(l^2)/2*(vp.*ve + vp.^2) ...
              0.5*(-l*ve+l^2*ve.^2)],3*xn,3*xn);
        
        Abd = sparse([1 xn],[1 xn],[1 1],3*xn,3*xn) ...
            + sparse([1+xn 2*xn],[1+xn 2*xn],[1 1],3*xn,3*xn) ...
            + sparse([1+2*xn 3*xn],[1+2*xn 3*xn],[1 1],3*xn,3*xn);
    elseif strcmp(method,'beamwarmsens')
        %create beam warming method
        A = @(ve,vw,vp,vs1e,vs1w,vs1p,vs2e,vs2w,vs2p,ind,dn,l) ...
             sparse(repmat(ind,1,3),[ind-2*dn ind-dn ind],[-l/2*vw+.5*l^2*vw.*vp...
               2*l*vp-1/2*l^2*vp.*ve-1/2*l^2*vp.^2 1-3/2*l*ve+1/2*l^2*ve.^2],3*xn,3*xn)...
             +sparse(repmat(ind+xn,1,3),[ind-2*dn ind-dn ind],[-l/2*vs1w+.5*l^2*vs1w.*vs1p...
               2*l*vs1p-1/2*l^2*vs1p.*vs1e-1/2*l^2*vs1p.^2 1-3/2*l*vs1e+1/2*l^2*vs1e.^2],3*xn,3*xn)...
             +sparse(repmat(ind+2*xn,1,3),[ind-2*dn ind-dn ind],[-l/2*vs2w+.5*l^2*vs2w.*vs2p...
               2*l*vs2p-1/2*l^2*vs2p.*vs2e-1/2*l^2*vs2p.^2 1-3/2*l*vs2e+1/2*l^2*vs2e.^2],3*xn,3*xn)...
             +sparse(repmat(ind+xn,1,3),[ind+xn-2*dn ind+xn-dn ind+xn],[-l/2*vw+.5*l^2*vw.*vp...
               2*l*vp-1/2*l^2*vp.*ve-1/2*l^2*vp.^2 1-3/2*l*ve+1/2*l^2*ve.^2],3*xn,3*xn)...
             +sparse(repmat(ind+2*xn,1,3),[ind+2*xn-2*dn ind+2*xn-dn ind+2*xn],[-l/2*vw+.5*l^2*vw.*vp...
               2*l*vp-1/2*l^2*vp.*ve-1/2*l^2*vp.^2 1-3/2*l*ve+1/2*l^2*ve.^2],3*xn,3*xn);
        
        Abd = @(ve,vp,vs1e,vs1p,vs2e,vs2p,ind,dn,l) ...
            sparse([ind ind 1 xn],[ind-dn ind 1 xn],[2*l*vp-1/2*l^2*vp.*ve-1/2*l^2*vp.^2 ...
            1-3/2*l*ve+1/2*l^2*ve.^2 1 1],3*xn,3*xn)...
            +sparse([ind+xn ind+xn 1+xn 2*xn],[ind-dn ind 1 xn],[2*l*vs1p-1/2*l^2*vs1p.*vs1e-1/2*l^2*vs1p.^2 ...
            1-3/2*l*vs1e+1/2*l^2*vs1e.^2 1 1],3*xn,3*xn)...
            +sparse([ind+2*xn ind+2*xn 1+2*xn 3*xn],[ind-dn ind 1 xn],[2*l*vs2p-1/2*l^2*vs2p.*vs2e-1/2*l^2*vs2p.^2 ...
            1-3/2*l*vs2e+1/2*l^2*vs2e.^2 1 1],3*xn,3*xn)...
            +sparse([ind+xn ind+xn 1+xn 2*xn],[ind+xn-dn ind+xn 1+xn 2*xn],[2*l*vp-1/2*l^2*vp.*ve-1/2*l^2*vp.^2 ...
            1-3/2*l*ve+1/2*l^2*ve.^2 1 1],3*xn,3*xn)...
            +sparse([ind+2*xn ind+2*xn 1+2*xn 3*xn],[ind+2*xn-dn ind+2*xn 1+2*xn 3*xn],[2*l*vp-1/2*l^2*vp.*ve-1/2*l^2*vp.^2 ...
            1-3/2*l*ve+1/2*l^2*ve.^2 1 1],3*xn,3*xn);
        
    else
        error('incorrect method specified')
    end
    
end